// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xtea.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xtea::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xtea::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> xtea::ap_ST_fsm_state1 = "1";
const sc_lv<6> xtea::ap_ST_fsm_state2 = "10";
const sc_lv<6> xtea::ap_ST_fsm_state3 = "100";
const sc_lv<6> xtea::ap_ST_fsm_state4 = "1000";
const sc_lv<6> xtea::ap_ST_fsm_state5 = "10000";
const sc_lv<6> xtea::ap_ST_fsm_state6 = "100000";
const sc_lv<32> xtea::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> xtea::ap_const_lv32_1 = "1";
const sc_lv<1> xtea::ap_const_lv1_0 = "0";
const sc_lv<32> xtea::ap_const_lv32_2 = "10";
const sc_lv<32> xtea::ap_const_lv32_3 = "11";
const sc_lv<32> xtea::ap_const_lv32_4 = "100";
const sc_lv<37> xtea::ap_const_lv37_0 = "0000000000000000000000000000000000000";
const sc_lv<6> xtea::ap_const_lv6_0 = "000000";
const sc_lv<38> xtea::ap_const_lv38_C6EF3720 = "11000110111011110011011100100000";
const sc_lv<1> xtea::ap_const_lv1_1 = "1";
const sc_lv<32> xtea::ap_const_lv32_5 = "101";
const sc_lv<6> xtea::ap_const_lv6_20 = "100000";
const sc_lv<6> xtea::ap_const_lv6_1 = "1";
const sc_lv<2> xtea::ap_const_lv2_0 = "00";
const sc_lv<2> xtea::ap_const_lv2_1 = "1";
const sc_lv<2> xtea::ap_const_lv2_2 = "10";
const sc_lv<32> xtea::ap_const_lv32_1F = "11111";
const sc_lv<37> xtea::ap_const_lv37_9E3779B9 = "10011110001101110111100110111001";
const sc_lv<13> xtea::ap_const_lv13_19B9 = "1100110111001";
const sc_lv<32> xtea::ap_const_lv32_B = "1011";
const sc_lv<32> xtea::ap_const_lv32_C = "1100";
const sc_lv<11> xtea::ap_const_lv11_0 = "00000000000";
const sc_lv<13> xtea::ap_const_lv13_0 = "0000000000000";
const sc_lv<13> xtea::ap_const_lv13_800 = "100000000000";
const sc_lv<13> xtea::ap_const_lv13_1000 = "1000000000000";
const sc_lv<32> xtea::ap_const_lv32_9E3779B9 = "10011110001101110111100110111001";
const sc_lv<38> xtea::ap_const_lv38_3F61C88647 = "11111101100001110010001000011001000111";
const sc_lv<2> xtea::ap_const_lv2_3 = "11";
const sc_lv<32> xtea::ap_const_lv32_61C88647 = "1100001110010001000011001000111";
const bool xtea::ap_const_boolean_1 = true;

xtea::xtea(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln34_1_fu_362_p2);
    sensitive << ( trunc_ln34_fu_358_p1 );
    sensitive << ( select_ln28_2_fu_318_p3 );

    SC_METHOD(thread_add_ln34_fu_352_p2);
    sensitive << ( v1_0_reg_178 );
    sensitive << ( xor_ln34_fu_346_p2 );

    SC_METHOD(thread_add_ln36_1_fu_378_p2);
    sensitive << ( trunc_ln36_fu_368_p1 );

    SC_METHOD(thread_add_ln46_1_fu_505_p2);
    sensitive << ( trunc_ln34_reg_846 );
    sensitive << ( add_ln46_2_fu_500_p2 );

    SC_METHOD(thread_add_ln46_2_fu_500_p2);
    sensitive << ( select_ln40_2_reg_861 );

    SC_METHOD(thread_add_ln46_fu_494_p2);
    sensitive << ( v0_fu_462_p2 );
    sensitive << ( xor_ln46_fu_488_p2 );

    SC_METHOD(thread_add_ln64_1_fu_644_p2);
    sensitive << ( trunc_ln64_fu_640_p1 );
    sensitive << ( select_ln58_2_fu_600_p3 );

    SC_METHOD(thread_add_ln64_fu_634_p2);
    sensitive << ( v0_1_reg_210 );
    sensitive << ( xor_ln64_fu_628_p2 );

    SC_METHOD(thread_add_ln66_1_fu_660_p2);
    sensitive << ( trunc_ln66_fu_650_p1 );

    SC_METHOD(thread_add_ln76_1_fu_769_p2);
    sensitive << ( trunc_ln64_reg_889 );
    sensitive << ( add_ln76_2_fu_764_p2 );

    SC_METHOD(thread_add_ln76_2_fu_764_p2);
    sensitive << ( select_ln70_2_reg_904 );

    SC_METHOD(thread_add_ln76_fu_758_p2);
    sensitive << ( v1_fu_726_p2 );
    sensitive << ( xor_ln76_fu_752_p2 );

    SC_METHOD(thread_and_ln1_fu_394_p3);
    sensitive << ( tmp_4_fu_384_p4 );

    SC_METHOD(thread_and_ln28_fu_294_p2);
    sensitive << ( icmp_ln28_fu_276_p2 );
    sensitive << ( xor_ln26_fu_288_p2 );

    SC_METHOD(thread_and_ln40_fu_426_p2);
    sensitive << ( icmp_ln40_fu_408_p2 );
    sensitive << ( xor_ln38_fu_420_p2 );

    SC_METHOD(thread_and_ln58_fu_576_p2);
    sensitive << ( icmp_ln58_fu_558_p2 );
    sensitive << ( xor_ln56_fu_570_p2 );

    SC_METHOD(thread_and_ln70_fu_690_p2);
    sensitive << ( icmp_ln70_fu_672_p2 );
    sensitive << ( xor_ln68_fu_684_p2 );

    SC_METHOD(thread_and_ln_fu_544_p3);
    sensitive << ( tmp_fu_534_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_i_2_fu_260_p2);
    sensitive << ( i_0_reg_157 );

    SC_METHOD(thread_i_fu_528_p2);
    sensitive << ( i_1_reg_199 );

    SC_METHOD(thread_icmp_ln23_fu_254_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_157 );

    SC_METHOD(thread_icmp_ln26_fu_270_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( trunc_ln23_fu_266_p1 );

    SC_METHOD(thread_icmp_ln28_fu_276_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( trunc_ln23_fu_266_p1 );

    SC_METHOD(thread_icmp_ln30_fu_282_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( trunc_ln23_fu_266_p1 );

    SC_METHOD(thread_icmp_ln38_fu_402_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( and_ln1_fu_394_p3 );

    SC_METHOD(thread_icmp_ln40_fu_408_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( and_ln1_fu_394_p3 );

    SC_METHOD(thread_icmp_ln42_fu_414_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( and_ln1_fu_394_p3 );

    SC_METHOD(thread_icmp_ln54_fu_522_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_199 );

    SC_METHOD(thread_icmp_ln56_fu_552_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( and_ln_fu_544_p3 );

    SC_METHOD(thread_icmp_ln58_fu_558_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( and_ln_fu_544_p3 );

    SC_METHOD(thread_icmp_ln60_fu_564_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( and_ln_fu_544_p3 );

    SC_METHOD(thread_icmp_ln68_fu_666_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( add_ln66_1_fu_660_p2 );

    SC_METHOD(thread_icmp_ln70_fu_672_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( add_ln66_1_fu_660_p2 );

    SC_METHOD(thread_icmp_ln72_fu_678_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( add_ln66_1_fu_660_p2 );

    SC_METHOD(thread_lshr_ln1_fu_738_p4);
    sensitive << ( v1_fu_726_p2 );

    SC_METHOD(thread_lshr_ln2_fu_332_p4);
    sensitive << ( v1_0_reg_178 );

    SC_METHOD(thread_lshr_ln3_fu_474_p4);
    sensitive << ( v0_fu_462_p2 );

    SC_METHOD(thread_lshr_ln_fu_614_p4);
    sensitive << ( v0_1_reg_210 );

    SC_METHOD(thread_mode_read_read_fu_90_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mode );

    SC_METHOD(thread_or_ln28_fu_306_p2);
    sensitive << ( icmp_ln26_fu_270_p2 );
    sensitive << ( and_ln28_fu_294_p2 );

    SC_METHOD(thread_or_ln40_fu_438_p2);
    sensitive << ( icmp_ln38_fu_402_p2 );
    sensitive << ( and_ln40_fu_426_p2 );

    SC_METHOD(thread_or_ln58_fu_588_p2);
    sensitive << ( icmp_ln56_fu_552_p2 );
    sensitive << ( and_ln58_fu_576_p2 );

    SC_METHOD(thread_or_ln70_fu_702_p2);
    sensitive << ( icmp_ln68_fu_666_p2 );
    sensitive << ( and_ln70_fu_690_p2 );

    SC_METHOD(thread_result0);
    sensitive << ( v0_3_reg_230 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_result0_ap_vld);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_result1);
    sensitive << ( v1_3_reg_242 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_result1_ap_vld);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_select_ln28_1_fu_312_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln30_fu_282_p2 );

    SC_METHOD(thread_select_ln28_2_fu_318_p3);
    sensitive << ( or_ln28_fu_306_p2 );
    sensitive << ( select_ln28_fu_300_p3 );
    sensitive << ( select_ln28_1_fu_312_p3 );

    SC_METHOD(thread_select_ln28_fu_300_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln28_fu_294_p2 );

    SC_METHOD(thread_select_ln40_1_fu_444_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln42_fu_414_p2 );

    SC_METHOD(thread_select_ln40_2_fu_450_p3);
    sensitive << ( or_ln40_fu_438_p2 );
    sensitive << ( select_ln40_fu_432_p3 );
    sensitive << ( select_ln40_1_fu_444_p3 );

    SC_METHOD(thread_select_ln40_fu_432_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln40_fu_426_p2 );

    SC_METHOD(thread_select_ln58_1_fu_594_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln60_fu_564_p2 );

    SC_METHOD(thread_select_ln58_2_fu_600_p3);
    sensitive << ( or_ln58_fu_588_p2 );
    sensitive << ( select_ln58_fu_582_p3 );
    sensitive << ( select_ln58_1_fu_594_p3 );

    SC_METHOD(thread_select_ln58_fu_582_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln58_fu_576_p2 );

    SC_METHOD(thread_select_ln70_1_fu_708_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln72_fu_678_p2 );

    SC_METHOD(thread_select_ln70_2_fu_714_p3);
    sensitive << ( or_ln70_fu_702_p2 );
    sensitive << ( select_ln70_fu_696_p3 );
    sensitive << ( select_ln70_1_fu_708_p3 );

    SC_METHOD(thread_select_ln70_fu_696_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln70_fu_690_p2 );

    SC_METHOD(thread_shl_ln34_fu_326_p2);
    sensitive << ( v1_0_reg_178 );

    SC_METHOD(thread_shl_ln46_fu_468_p2);
    sensitive << ( v0_fu_462_p2 );

    SC_METHOD(thread_shl_ln64_fu_608_p2);
    sensitive << ( v0_1_reg_210 );

    SC_METHOD(thread_shl_ln76_fu_732_p2);
    sensitive << ( v1_fu_726_p2 );

    SC_METHOD(thread_sum_2_fu_372_p2);
    sensitive << ( sum_0_reg_146 );

    SC_METHOD(thread_sum_fu_654_p2);
    sensitive << ( sum_1_reg_188 );

    SC_METHOD(thread_tmp_4_fu_384_p4);
    sensitive << ( add_ln36_1_fu_378_p2 );

    SC_METHOD(thread_tmp_fu_534_p4);
    sensitive << ( sum_1_reg_188 );

    SC_METHOD(thread_trunc_ln23_fu_266_p1);
    sensitive << ( sum_0_reg_146 );

    SC_METHOD(thread_trunc_ln34_fu_358_p1);
    sensitive << ( sum_0_reg_146 );

    SC_METHOD(thread_trunc_ln36_fu_368_p1);
    sensitive << ( sum_0_reg_146 );

    SC_METHOD(thread_trunc_ln64_fu_640_p1);
    sensitive << ( sum_1_reg_188 );

    SC_METHOD(thread_trunc_ln66_fu_650_p1);
    sensitive << ( sum_1_reg_188 );

    SC_METHOD(thread_v0_2_fu_780_p2);
    sensitive << ( v0_1_reg_210 );
    sensitive << ( xor_ln76_1_fu_774_p2 );

    SC_METHOD(thread_v0_fu_462_p2);
    sensitive << ( v0_0_reg_168 );
    sensitive << ( xor_ln34_1_fu_458_p2 );

    SC_METHOD(thread_v1_2_fu_516_p2);
    sensitive << ( v1_0_reg_178 );
    sensitive << ( xor_ln46_1_fu_510_p2 );

    SC_METHOD(thread_v1_fu_726_p2);
    sensitive << ( v1_1_reg_220 );
    sensitive << ( xor_ln64_1_fu_722_p2 );

    SC_METHOD(thread_xor_ln26_fu_288_p2);
    sensitive << ( icmp_ln26_fu_270_p2 );

    SC_METHOD(thread_xor_ln34_1_fu_458_p2);
    sensitive << ( add_ln34_reg_841 );
    sensitive << ( add_ln34_1_reg_851 );

    SC_METHOD(thread_xor_ln34_fu_346_p2);
    sensitive << ( shl_ln34_fu_326_p2 );
    sensitive << ( zext_ln34_fu_342_p1 );

    SC_METHOD(thread_xor_ln38_fu_420_p2);
    sensitive << ( icmp_ln38_fu_402_p2 );

    SC_METHOD(thread_xor_ln46_1_fu_510_p2);
    sensitive << ( add_ln46_1_fu_505_p2 );
    sensitive << ( add_ln46_fu_494_p2 );

    SC_METHOD(thread_xor_ln46_fu_488_p2);
    sensitive << ( shl_ln46_fu_468_p2 );
    sensitive << ( zext_ln46_fu_484_p1 );

    SC_METHOD(thread_xor_ln56_fu_570_p2);
    sensitive << ( icmp_ln56_fu_552_p2 );

    SC_METHOD(thread_xor_ln64_1_fu_722_p2);
    sensitive << ( add_ln64_reg_884 );
    sensitive << ( add_ln64_1_reg_894 );

    SC_METHOD(thread_xor_ln64_fu_628_p2);
    sensitive << ( shl_ln64_fu_608_p2 );
    sensitive << ( zext_ln64_fu_624_p1 );

    SC_METHOD(thread_xor_ln68_fu_684_p2);
    sensitive << ( icmp_ln68_fu_666_p2 );

    SC_METHOD(thread_xor_ln76_1_fu_774_p2);
    sensitive << ( add_ln76_1_fu_769_p2 );
    sensitive << ( add_ln76_fu_758_p2 );

    SC_METHOD(thread_xor_ln76_fu_752_p2);
    sensitive << ( shl_ln76_fu_732_p2 );
    sensitive << ( zext_ln76_fu_748_p1 );

    SC_METHOD(thread_zext_ln34_fu_342_p1);
    sensitive << ( lshr_ln2_fu_332_p4 );

    SC_METHOD(thread_zext_ln46_fu_484_p1);
    sensitive << ( lshr_ln3_fu_474_p4 );

    SC_METHOD(thread_zext_ln64_fu_624_p1);
    sensitive << ( lshr_ln_fu_614_p4 );

    SC_METHOD(thread_zext_ln76_fu_748_p1);
    sensitive << ( lshr_ln1_fu_738_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_254_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln54_fu_522_p2 );
    sensitive << ( mode_read_read_fu_90_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xtea_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, word0, "(port)word0");
    sc_trace(mVcdFile, word1, "(port)word1");
    sc_trace(mVcdFile, key0, "(port)key0");
    sc_trace(mVcdFile, key1, "(port)key1");
    sc_trace(mVcdFile, key2, "(port)key2");
    sc_trace(mVcdFile, key3, "(port)key3");
    sc_trace(mVcdFile, mode, "(port)mode");
    sc_trace(mVcdFile, result0, "(port)result0");
    sc_trace(mVcdFile, result0_ap_vld, "(port)result0_ap_vld");
    sc_trace(mVcdFile, result1, "(port)result1");
    sc_trace(mVcdFile, result1_ap_vld, "(port)result1_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_2_fu_260_p2, "i_2_fu_260_p2");
    sc_trace(mVcdFile, i_2_reg_836, "i_2_reg_836");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln34_fu_352_p2, "add_ln34_fu_352_p2");
    sc_trace(mVcdFile, add_ln34_reg_841, "add_ln34_reg_841");
    sc_trace(mVcdFile, icmp_ln23_fu_254_p2, "icmp_ln23_fu_254_p2");
    sc_trace(mVcdFile, trunc_ln34_fu_358_p1, "trunc_ln34_fu_358_p1");
    sc_trace(mVcdFile, trunc_ln34_reg_846, "trunc_ln34_reg_846");
    sc_trace(mVcdFile, add_ln34_1_fu_362_p2, "add_ln34_1_fu_362_p2");
    sc_trace(mVcdFile, add_ln34_1_reg_851, "add_ln34_1_reg_851");
    sc_trace(mVcdFile, sum_2_fu_372_p2, "sum_2_fu_372_p2");
    sc_trace(mVcdFile, sum_2_reg_856, "sum_2_reg_856");
    sc_trace(mVcdFile, select_ln40_2_fu_450_p3, "select_ln40_2_fu_450_p3");
    sc_trace(mVcdFile, select_ln40_2_reg_861, "select_ln40_2_reg_861");
    sc_trace(mVcdFile, v0_fu_462_p2, "v0_fu_462_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, v1_2_fu_516_p2, "v1_2_fu_516_p2");
    sc_trace(mVcdFile, i_fu_528_p2, "i_fu_528_p2");
    sc_trace(mVcdFile, i_reg_879, "i_reg_879");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln64_fu_634_p2, "add_ln64_fu_634_p2");
    sc_trace(mVcdFile, add_ln64_reg_884, "add_ln64_reg_884");
    sc_trace(mVcdFile, icmp_ln54_fu_522_p2, "icmp_ln54_fu_522_p2");
    sc_trace(mVcdFile, trunc_ln64_fu_640_p1, "trunc_ln64_fu_640_p1");
    sc_trace(mVcdFile, trunc_ln64_reg_889, "trunc_ln64_reg_889");
    sc_trace(mVcdFile, add_ln64_1_fu_644_p2, "add_ln64_1_fu_644_p2");
    sc_trace(mVcdFile, add_ln64_1_reg_894, "add_ln64_1_reg_894");
    sc_trace(mVcdFile, sum_fu_654_p2, "sum_fu_654_p2");
    sc_trace(mVcdFile, sum_reg_899, "sum_reg_899");
    sc_trace(mVcdFile, select_ln70_2_fu_714_p3, "select_ln70_2_fu_714_p3");
    sc_trace(mVcdFile, select_ln70_2_reg_904, "select_ln70_2_reg_904");
    sc_trace(mVcdFile, v1_fu_726_p2, "v1_fu_726_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, v0_2_fu_780_p2, "v0_2_fu_780_p2");
    sc_trace(mVcdFile, sum_0_reg_146, "sum_0_reg_146");
    sc_trace(mVcdFile, mode_read_read_fu_90_p2, "mode_read_read_fu_90_p2");
    sc_trace(mVcdFile, i_0_reg_157, "i_0_reg_157");
    sc_trace(mVcdFile, v0_0_reg_168, "v0_0_reg_168");
    sc_trace(mVcdFile, v1_0_reg_178, "v1_0_reg_178");
    sc_trace(mVcdFile, sum_1_reg_188, "sum_1_reg_188");
    sc_trace(mVcdFile, i_1_reg_199, "i_1_reg_199");
    sc_trace(mVcdFile, v0_1_reg_210, "v0_1_reg_210");
    sc_trace(mVcdFile, v1_1_reg_220, "v1_1_reg_220");
    sc_trace(mVcdFile, v0_3_reg_230, "v0_3_reg_230");
    sc_trace(mVcdFile, v1_3_reg_242, "v1_3_reg_242");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, trunc_ln23_fu_266_p1, "trunc_ln23_fu_266_p1");
    sc_trace(mVcdFile, icmp_ln26_fu_270_p2, "icmp_ln26_fu_270_p2");
    sc_trace(mVcdFile, icmp_ln28_fu_276_p2, "icmp_ln28_fu_276_p2");
    sc_trace(mVcdFile, xor_ln26_fu_288_p2, "xor_ln26_fu_288_p2");
    sc_trace(mVcdFile, and_ln28_fu_294_p2, "and_ln28_fu_294_p2");
    sc_trace(mVcdFile, icmp_ln30_fu_282_p2, "icmp_ln30_fu_282_p2");
    sc_trace(mVcdFile, or_ln28_fu_306_p2, "or_ln28_fu_306_p2");
    sc_trace(mVcdFile, select_ln28_fu_300_p3, "select_ln28_fu_300_p3");
    sc_trace(mVcdFile, select_ln28_1_fu_312_p3, "select_ln28_1_fu_312_p3");
    sc_trace(mVcdFile, lshr_ln2_fu_332_p4, "lshr_ln2_fu_332_p4");
    sc_trace(mVcdFile, shl_ln34_fu_326_p2, "shl_ln34_fu_326_p2");
    sc_trace(mVcdFile, zext_ln34_fu_342_p1, "zext_ln34_fu_342_p1");
    sc_trace(mVcdFile, xor_ln34_fu_346_p2, "xor_ln34_fu_346_p2");
    sc_trace(mVcdFile, select_ln28_2_fu_318_p3, "select_ln28_2_fu_318_p3");
    sc_trace(mVcdFile, trunc_ln36_fu_368_p1, "trunc_ln36_fu_368_p1");
    sc_trace(mVcdFile, add_ln36_1_fu_378_p2, "add_ln36_1_fu_378_p2");
    sc_trace(mVcdFile, tmp_4_fu_384_p4, "tmp_4_fu_384_p4");
    sc_trace(mVcdFile, and_ln1_fu_394_p3, "and_ln1_fu_394_p3");
    sc_trace(mVcdFile, icmp_ln38_fu_402_p2, "icmp_ln38_fu_402_p2");
    sc_trace(mVcdFile, icmp_ln40_fu_408_p2, "icmp_ln40_fu_408_p2");
    sc_trace(mVcdFile, xor_ln38_fu_420_p2, "xor_ln38_fu_420_p2");
    sc_trace(mVcdFile, and_ln40_fu_426_p2, "and_ln40_fu_426_p2");
    sc_trace(mVcdFile, icmp_ln42_fu_414_p2, "icmp_ln42_fu_414_p2");
    sc_trace(mVcdFile, or_ln40_fu_438_p2, "or_ln40_fu_438_p2");
    sc_trace(mVcdFile, select_ln40_fu_432_p3, "select_ln40_fu_432_p3");
    sc_trace(mVcdFile, select_ln40_1_fu_444_p3, "select_ln40_1_fu_444_p3");
    sc_trace(mVcdFile, xor_ln34_1_fu_458_p2, "xor_ln34_1_fu_458_p2");
    sc_trace(mVcdFile, lshr_ln3_fu_474_p4, "lshr_ln3_fu_474_p4");
    sc_trace(mVcdFile, shl_ln46_fu_468_p2, "shl_ln46_fu_468_p2");
    sc_trace(mVcdFile, zext_ln46_fu_484_p1, "zext_ln46_fu_484_p1");
    sc_trace(mVcdFile, xor_ln46_fu_488_p2, "xor_ln46_fu_488_p2");
    sc_trace(mVcdFile, add_ln46_2_fu_500_p2, "add_ln46_2_fu_500_p2");
    sc_trace(mVcdFile, add_ln46_1_fu_505_p2, "add_ln46_1_fu_505_p2");
    sc_trace(mVcdFile, add_ln46_fu_494_p2, "add_ln46_fu_494_p2");
    sc_trace(mVcdFile, xor_ln46_1_fu_510_p2, "xor_ln46_1_fu_510_p2");
    sc_trace(mVcdFile, tmp_fu_534_p4, "tmp_fu_534_p4");
    sc_trace(mVcdFile, and_ln_fu_544_p3, "and_ln_fu_544_p3");
    sc_trace(mVcdFile, icmp_ln56_fu_552_p2, "icmp_ln56_fu_552_p2");
    sc_trace(mVcdFile, icmp_ln58_fu_558_p2, "icmp_ln58_fu_558_p2");
    sc_trace(mVcdFile, xor_ln56_fu_570_p2, "xor_ln56_fu_570_p2");
    sc_trace(mVcdFile, and_ln58_fu_576_p2, "and_ln58_fu_576_p2");
    sc_trace(mVcdFile, icmp_ln60_fu_564_p2, "icmp_ln60_fu_564_p2");
    sc_trace(mVcdFile, or_ln58_fu_588_p2, "or_ln58_fu_588_p2");
    sc_trace(mVcdFile, select_ln58_fu_582_p3, "select_ln58_fu_582_p3");
    sc_trace(mVcdFile, select_ln58_1_fu_594_p3, "select_ln58_1_fu_594_p3");
    sc_trace(mVcdFile, lshr_ln_fu_614_p4, "lshr_ln_fu_614_p4");
    sc_trace(mVcdFile, shl_ln64_fu_608_p2, "shl_ln64_fu_608_p2");
    sc_trace(mVcdFile, zext_ln64_fu_624_p1, "zext_ln64_fu_624_p1");
    sc_trace(mVcdFile, xor_ln64_fu_628_p2, "xor_ln64_fu_628_p2");
    sc_trace(mVcdFile, select_ln58_2_fu_600_p3, "select_ln58_2_fu_600_p3");
    sc_trace(mVcdFile, trunc_ln66_fu_650_p1, "trunc_ln66_fu_650_p1");
    sc_trace(mVcdFile, add_ln66_1_fu_660_p2, "add_ln66_1_fu_660_p2");
    sc_trace(mVcdFile, icmp_ln68_fu_666_p2, "icmp_ln68_fu_666_p2");
    sc_trace(mVcdFile, icmp_ln70_fu_672_p2, "icmp_ln70_fu_672_p2");
    sc_trace(mVcdFile, xor_ln68_fu_684_p2, "xor_ln68_fu_684_p2");
    sc_trace(mVcdFile, and_ln70_fu_690_p2, "and_ln70_fu_690_p2");
    sc_trace(mVcdFile, icmp_ln72_fu_678_p2, "icmp_ln72_fu_678_p2");
    sc_trace(mVcdFile, or_ln70_fu_702_p2, "or_ln70_fu_702_p2");
    sc_trace(mVcdFile, select_ln70_fu_696_p3, "select_ln70_fu_696_p3");
    sc_trace(mVcdFile, select_ln70_1_fu_708_p3, "select_ln70_1_fu_708_p3");
    sc_trace(mVcdFile, xor_ln64_1_fu_722_p2, "xor_ln64_1_fu_722_p2");
    sc_trace(mVcdFile, lshr_ln1_fu_738_p4, "lshr_ln1_fu_738_p4");
    sc_trace(mVcdFile, shl_ln76_fu_732_p2, "shl_ln76_fu_732_p2");
    sc_trace(mVcdFile, zext_ln76_fu_748_p1, "zext_ln76_fu_748_p1");
    sc_trace(mVcdFile, xor_ln76_fu_752_p2, "xor_ln76_fu_752_p2");
    sc_trace(mVcdFile, add_ln76_2_fu_764_p2, "add_ln76_2_fu_764_p2");
    sc_trace(mVcdFile, add_ln76_1_fu_769_p2, "add_ln76_1_fu_769_p2");
    sc_trace(mVcdFile, add_ln76_fu_758_p2, "add_ln76_fu_758_p2");
    sc_trace(mVcdFile, xor_ln76_1_fu_774_p2, "xor_ln76_1_fu_774_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("xtea.hdltvin.dat");
    mHdltvoutHandle.open("xtea.hdltvout.dat");
}

xtea::~xtea() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void xtea::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_90_p2.read()))) {
        i_0_reg_157 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_157 = i_2_reg_836.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_90_p2.read(), ap_const_lv1_1))) {
        i_1_reg_199 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_reg_199 = i_reg_879.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_90_p2.read()))) {
        sum_0_reg_146 = ap_const_lv37_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sum_0_reg_146 = sum_2_reg_856.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_90_p2.read(), ap_const_lv1_1))) {
        sum_1_reg_188 = ap_const_lv38_C6EF3720;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sum_1_reg_188 = sum_reg_899.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_90_p2.read()))) {
        v0_0_reg_168 = word0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v0_0_reg_168 = v0_fu_462_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_90_p2.read(), ap_const_lv1_1))) {
        v0_1_reg_210 = word0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        v0_1_reg_210 = v0_2_fu_780_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_254_p2.read(), ap_const_lv1_1))) {
        v0_3_reg_230 = v0_0_reg_168.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln54_fu_522_p2.read(), ap_const_lv1_1))) {
        v0_3_reg_230 = v0_1_reg_210.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_90_p2.read()))) {
        v1_0_reg_178 = word1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v1_0_reg_178 = v1_2_fu_516_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_90_p2.read(), ap_const_lv1_1))) {
        v1_1_reg_220 = word1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        v1_1_reg_220 = v1_fu_726_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_254_p2.read(), ap_const_lv1_1))) {
        v1_3_reg_242 = v1_0_reg_178.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln54_fu_522_p2.read(), ap_const_lv1_1))) {
        v1_3_reg_242 = v1_1_reg_220.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_254_p2.read(), ap_const_lv1_0))) {
        add_ln34_1_reg_851 = add_ln34_1_fu_362_p2.read();
        add_ln34_reg_841 = add_ln34_fu_352_p2.read();
        select_ln40_2_reg_861 = select_ln40_2_fu_450_p3.read();
        sum_2_reg_856 = sum_2_fu_372_p2.read();
        trunc_ln34_reg_846 = trunc_ln34_fu_358_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln54_fu_522_p2.read()))) {
        add_ln64_1_reg_894 = add_ln64_1_fu_644_p2.read();
        add_ln64_reg_884 = add_ln64_fu_634_p2.read();
        select_ln70_2_reg_904 = select_ln70_2_fu_714_p3.read();
        sum_reg_899 = sum_fu_654_p2.read();
        trunc_ln64_reg_889 = trunc_ln64_fu_640_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_2_reg_836 = i_2_fu_260_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_879 = i_fu_528_p2.read();
    }
}

void xtea::thread_add_ln34_1_fu_362_p2() {
    add_ln34_1_fu_362_p2 = (!select_ln28_2_fu_318_p3.read().is_01() || !trunc_ln34_fu_358_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln28_2_fu_318_p3.read()) + sc_biguint<32>(trunc_ln34_fu_358_p1.read()));
}

void xtea::thread_add_ln34_fu_352_p2() {
    add_ln34_fu_352_p2 = (!xor_ln34_fu_346_p2.read().is_01() || !v1_0_reg_178.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln34_fu_346_p2.read()) + sc_biguint<32>(v1_0_reg_178.read()));
}

void xtea::thread_add_ln36_1_fu_378_p2() {
    add_ln36_1_fu_378_p2 = (!ap_const_lv13_19B9.is_01() || !trunc_ln36_fu_368_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_19B9) + sc_biguint<13>(trunc_ln36_fu_368_p1.read()));
}

void xtea::thread_add_ln46_1_fu_505_p2() {
    add_ln46_1_fu_505_p2 = (!add_ln46_2_fu_500_p2.read().is_01() || !trunc_ln34_reg_846.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln46_2_fu_500_p2.read()) + sc_biguint<32>(trunc_ln34_reg_846.read()));
}

void xtea::thread_add_ln46_2_fu_500_p2() {
    add_ln46_2_fu_500_p2 = (!ap_const_lv32_9E3779B9.is_01() || !select_ln40_2_reg_861.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_9E3779B9) + sc_biguint<32>(select_ln40_2_reg_861.read()));
}

void xtea::thread_add_ln46_fu_494_p2() {
    add_ln46_fu_494_p2 = (!v0_fu_462_p2.read().is_01() || !xor_ln46_fu_488_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(v0_fu_462_p2.read()) + sc_biguint<32>(xor_ln46_fu_488_p2.read()));
}

void xtea::thread_add_ln64_1_fu_644_p2() {
    add_ln64_1_fu_644_p2 = (!select_ln58_2_fu_600_p3.read().is_01() || !trunc_ln64_fu_640_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln58_2_fu_600_p3.read()) + sc_biguint<32>(trunc_ln64_fu_640_p1.read()));
}

void xtea::thread_add_ln64_fu_634_p2() {
    add_ln64_fu_634_p2 = (!xor_ln64_fu_628_p2.read().is_01() || !v0_1_reg_210.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln64_fu_628_p2.read()) + sc_biguint<32>(v0_1_reg_210.read()));
}

void xtea::thread_add_ln66_1_fu_660_p2() {
    add_ln66_1_fu_660_p2 = (!ap_const_lv2_3.is_01() || !trunc_ln66_fu_650_p1.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(trunc_ln66_fu_650_p1.read()));
}

void xtea::thread_add_ln76_1_fu_769_p2() {
    add_ln76_1_fu_769_p2 = (!add_ln76_2_fu_764_p2.read().is_01() || !trunc_ln64_reg_889.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln76_2_fu_764_p2.read()) + sc_biguint<32>(trunc_ln64_reg_889.read()));
}

void xtea::thread_add_ln76_2_fu_764_p2() {
    add_ln76_2_fu_764_p2 = (!ap_const_lv32_61C88647.is_01() || !select_ln70_2_reg_904.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_61C88647) + sc_biguint<32>(select_ln70_2_reg_904.read()));
}

void xtea::thread_add_ln76_fu_758_p2() {
    add_ln76_fu_758_p2 = (!v1_fu_726_p2.read().is_01() || !xor_ln76_fu_752_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(v1_fu_726_p2.read()) + sc_biguint<32>(xor_ln76_fu_752_p2.read()));
}

void xtea::thread_and_ln1_fu_394_p3() {
    and_ln1_fu_394_p3 = esl_concat<2,11>(tmp_4_fu_384_p4.read(), ap_const_lv11_0);
}

void xtea::thread_and_ln28_fu_294_p2() {
    and_ln28_fu_294_p2 = (icmp_ln28_fu_276_p2.read() & xor_ln26_fu_288_p2.read());
}

void xtea::thread_and_ln40_fu_426_p2() {
    and_ln40_fu_426_p2 = (icmp_ln40_fu_408_p2.read() & xor_ln38_fu_420_p2.read());
}

void xtea::thread_and_ln58_fu_576_p2() {
    and_ln58_fu_576_p2 = (icmp_ln58_fu_558_p2.read() & xor_ln56_fu_570_p2.read());
}

void xtea::thread_and_ln70_fu_690_p2() {
    and_ln70_fu_690_p2 = (icmp_ln70_fu_672_p2.read() & xor_ln68_fu_684_p2.read());
}

void xtea::thread_and_ln_fu_544_p3() {
    and_ln_fu_544_p3 = esl_concat<2,11>(tmp_fu_534_p4.read(), ap_const_lv11_0);
}

void xtea::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xtea::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void xtea::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void xtea::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void xtea::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void xtea::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void xtea::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xtea::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xtea::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xtea::thread_i_2_fu_260_p2() {
    i_2_fu_260_p2 = (!i_0_reg_157.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_157.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void xtea::thread_i_fu_528_p2() {
    i_fu_528_p2 = (!i_1_reg_199.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_199.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void xtea::thread_icmp_ln23_fu_254_p2() {
    icmp_ln23_fu_254_p2 = (!i_0_reg_157.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_157.read() == ap_const_lv6_20);
}

void xtea::thread_icmp_ln26_fu_270_p2() {
    icmp_ln26_fu_270_p2 = (!trunc_ln23_fu_266_p1.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln23_fu_266_p1.read() == ap_const_lv2_0);
}

void xtea::thread_icmp_ln28_fu_276_p2() {
    icmp_ln28_fu_276_p2 = (!trunc_ln23_fu_266_p1.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln23_fu_266_p1.read() == ap_const_lv2_1);
}

void xtea::thread_icmp_ln30_fu_282_p2() {
    icmp_ln30_fu_282_p2 = (!trunc_ln23_fu_266_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln23_fu_266_p1.read() == ap_const_lv2_2);
}

void xtea::thread_icmp_ln38_fu_402_p2() {
    icmp_ln38_fu_402_p2 = (!and_ln1_fu_394_p3.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln1_fu_394_p3.read() == ap_const_lv13_0);
}

void xtea::thread_icmp_ln40_fu_408_p2() {
    icmp_ln40_fu_408_p2 = (!and_ln1_fu_394_p3.read().is_01() || !ap_const_lv13_800.is_01())? sc_lv<1>(): sc_lv<1>(and_ln1_fu_394_p3.read() == ap_const_lv13_800);
}

void xtea::thread_icmp_ln42_fu_414_p2() {
    icmp_ln42_fu_414_p2 = (!and_ln1_fu_394_p3.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(and_ln1_fu_394_p3.read() == ap_const_lv13_1000);
}

void xtea::thread_icmp_ln54_fu_522_p2() {
    icmp_ln54_fu_522_p2 = (!i_1_reg_199.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_199.read() == ap_const_lv6_20);
}

void xtea::thread_icmp_ln56_fu_552_p2() {
    icmp_ln56_fu_552_p2 = (!and_ln_fu_544_p3.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln_fu_544_p3.read() == ap_const_lv13_0);
}

void xtea::thread_icmp_ln58_fu_558_p2() {
    icmp_ln58_fu_558_p2 = (!and_ln_fu_544_p3.read().is_01() || !ap_const_lv13_800.is_01())? sc_lv<1>(): sc_lv<1>(and_ln_fu_544_p3.read() == ap_const_lv13_800);
}

void xtea::thread_icmp_ln60_fu_564_p2() {
    icmp_ln60_fu_564_p2 = (!and_ln_fu_544_p3.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(and_ln_fu_544_p3.read() == ap_const_lv13_1000);
}

void xtea::thread_icmp_ln68_fu_666_p2() {
    icmp_ln68_fu_666_p2 = (!add_ln66_1_fu_660_p2.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(add_ln66_1_fu_660_p2.read() == ap_const_lv2_0);
}

void xtea::thread_icmp_ln70_fu_672_p2() {
    icmp_ln70_fu_672_p2 = (!add_ln66_1_fu_660_p2.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(add_ln66_1_fu_660_p2.read() == ap_const_lv2_1);
}

void xtea::thread_icmp_ln72_fu_678_p2() {
    icmp_ln72_fu_678_p2 = (!add_ln66_1_fu_660_p2.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(add_ln66_1_fu_660_p2.read() == ap_const_lv2_2);
}

void xtea::thread_lshr_ln1_fu_738_p4() {
    lshr_ln1_fu_738_p4 = v1_fu_726_p2.read().range(31, 5);
}

void xtea::thread_lshr_ln2_fu_332_p4() {
    lshr_ln2_fu_332_p4 = v1_0_reg_178.read().range(31, 5);
}

void xtea::thread_lshr_ln3_fu_474_p4() {
    lshr_ln3_fu_474_p4 = v0_fu_462_p2.read().range(31, 5);
}

void xtea::thread_lshr_ln_fu_614_p4() {
    lshr_ln_fu_614_p4 = v0_1_reg_210.read().range(31, 5);
}

void xtea::thread_mode_read_read_fu_90_p2() {
    mode_read_read_fu_90_p2 =  (sc_lv<1>) (mode.read());
}

void xtea::thread_or_ln28_fu_306_p2() {
    or_ln28_fu_306_p2 = (and_ln28_fu_294_p2.read() | icmp_ln26_fu_270_p2.read());
}

void xtea::thread_or_ln40_fu_438_p2() {
    or_ln40_fu_438_p2 = (and_ln40_fu_426_p2.read() | icmp_ln38_fu_402_p2.read());
}

void xtea::thread_or_ln58_fu_588_p2() {
    or_ln58_fu_588_p2 = (and_ln58_fu_576_p2.read() | icmp_ln56_fu_552_p2.read());
}

void xtea::thread_or_ln70_fu_702_p2() {
    or_ln70_fu_702_p2 = (and_ln70_fu_690_p2.read() | icmp_ln68_fu_666_p2.read());
}

void xtea::thread_result0() {
    result0 = v0_3_reg_230.read();
}

void xtea::thread_result0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        result0_ap_vld = ap_const_logic_1;
    } else {
        result0_ap_vld = ap_const_logic_0;
    }
}

void xtea::thread_result1() {
    result1 = v1_3_reg_242.read();
}

void xtea::thread_result1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        result1_ap_vld = ap_const_logic_1;
    } else {
        result1_ap_vld = ap_const_logic_0;
    }
}

void xtea::thread_select_ln28_1_fu_312_p3() {
    select_ln28_1_fu_312_p3 = (!icmp_ln30_fu_282_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln30_fu_282_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln28_2_fu_318_p3() {
    select_ln28_2_fu_318_p3 = (!or_ln28_fu_306_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln28_fu_306_p2.read()[0].to_bool())? select_ln28_fu_300_p3.read(): select_ln28_1_fu_312_p3.read());
}

void xtea::thread_select_ln28_fu_300_p3() {
    select_ln28_fu_300_p3 = (!and_ln28_fu_294_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln28_fu_294_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_select_ln40_1_fu_444_p3() {
    select_ln40_1_fu_444_p3 = (!icmp_ln42_fu_414_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln42_fu_414_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln40_2_fu_450_p3() {
    select_ln40_2_fu_450_p3 = (!or_ln40_fu_438_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln40_fu_438_p2.read()[0].to_bool())? select_ln40_fu_432_p3.read(): select_ln40_1_fu_444_p3.read());
}

void xtea::thread_select_ln40_fu_432_p3() {
    select_ln40_fu_432_p3 = (!and_ln40_fu_426_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln40_fu_426_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_select_ln58_1_fu_594_p3() {
    select_ln58_1_fu_594_p3 = (!icmp_ln60_fu_564_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln60_fu_564_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln58_2_fu_600_p3() {
    select_ln58_2_fu_600_p3 = (!or_ln58_fu_588_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln58_fu_588_p2.read()[0].to_bool())? select_ln58_fu_582_p3.read(): select_ln58_1_fu_594_p3.read());
}

void xtea::thread_select_ln58_fu_582_p3() {
    select_ln58_fu_582_p3 = (!and_ln58_fu_576_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln58_fu_576_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_select_ln70_1_fu_708_p3() {
    select_ln70_1_fu_708_p3 = (!icmp_ln72_fu_678_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln72_fu_678_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln70_2_fu_714_p3() {
    select_ln70_2_fu_714_p3 = (!or_ln70_fu_702_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln70_fu_702_p2.read()[0].to_bool())? select_ln70_fu_696_p3.read(): select_ln70_1_fu_708_p3.read());
}

void xtea::thread_select_ln70_fu_696_p3() {
    select_ln70_fu_696_p3 = (!and_ln70_fu_690_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln70_fu_690_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_shl_ln34_fu_326_p2() {
    shl_ln34_fu_326_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): v1_0_reg_178.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void xtea::thread_shl_ln46_fu_468_p2() {
    shl_ln46_fu_468_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): v0_fu_462_p2.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void xtea::thread_shl_ln64_fu_608_p2() {
    shl_ln64_fu_608_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): v0_1_reg_210.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void xtea::thread_shl_ln76_fu_732_p2() {
    shl_ln76_fu_732_p2 = (!ap_const_lv32_4.is_01())? sc_lv<32>(): v1_fu_726_p2.read() << (unsigned short)ap_const_lv32_4.to_uint();
}

void xtea::thread_sum_2_fu_372_p2() {
    sum_2_fu_372_p2 = (!ap_const_lv37_9E3779B9.is_01() || !sum_0_reg_146.read().is_01())? sc_lv<37>(): (sc_biguint<37>(ap_const_lv37_9E3779B9) + sc_biguint<37>(sum_0_reg_146.read()));
}

void xtea::thread_sum_fu_654_p2() {
    sum_fu_654_p2 = (!ap_const_lv38_3F61C88647.is_01() || !sum_1_reg_188.read().is_01())? sc_lv<38>(): (sc_bigint<38>(ap_const_lv38_3F61C88647) + sc_biguint<38>(sum_1_reg_188.read()));
}

void xtea::thread_tmp_4_fu_384_p4() {
    tmp_4_fu_384_p4 = add_ln36_1_fu_378_p2.read().range(12, 11);
}

void xtea::thread_tmp_fu_534_p4() {
    tmp_fu_534_p4 = sum_1_reg_188.read().range(12, 11);
}

void xtea::thread_trunc_ln23_fu_266_p1() {
    trunc_ln23_fu_266_p1 = sum_0_reg_146.read().range(2-1, 0);
}

void xtea::thread_trunc_ln34_fu_358_p1() {
    trunc_ln34_fu_358_p1 = sum_0_reg_146.read().range(32-1, 0);
}

void xtea::thread_trunc_ln36_fu_368_p1() {
    trunc_ln36_fu_368_p1 = sum_0_reg_146.read().range(13-1, 0);
}

void xtea::thread_trunc_ln64_fu_640_p1() {
    trunc_ln64_fu_640_p1 = sum_1_reg_188.read().range(32-1, 0);
}

void xtea::thread_trunc_ln66_fu_650_p1() {
    trunc_ln66_fu_650_p1 = sum_1_reg_188.read().range(2-1, 0);
}

void xtea::thread_v0_2_fu_780_p2() {
    v0_2_fu_780_p2 = (!v0_1_reg_210.read().is_01() || !xor_ln76_1_fu_774_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(v0_1_reg_210.read()) - sc_biguint<32>(xor_ln76_1_fu_774_p2.read()));
}

void xtea::thread_v0_fu_462_p2() {
    v0_fu_462_p2 = (!xor_ln34_1_fu_458_p2.read().is_01() || !v0_0_reg_168.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln34_1_fu_458_p2.read()) + sc_biguint<32>(v0_0_reg_168.read()));
}

void xtea::thread_v1_2_fu_516_p2() {
    v1_2_fu_516_p2 = (!xor_ln46_1_fu_510_p2.read().is_01() || !v1_0_reg_178.read().is_01())? sc_lv<32>(): (sc_biguint<32>(xor_ln46_1_fu_510_p2.read()) + sc_biguint<32>(v1_0_reg_178.read()));
}

void xtea::thread_v1_fu_726_p2() {
    v1_fu_726_p2 = (!v1_1_reg_220.read().is_01() || !xor_ln64_1_fu_722_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(v1_1_reg_220.read()) - sc_biguint<32>(xor_ln64_1_fu_722_p2.read()));
}

void xtea::thread_xor_ln26_fu_288_p2() {
    xor_ln26_fu_288_p2 = (icmp_ln26_fu_270_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln34_1_fu_458_p2() {
    xor_ln34_1_fu_458_p2 = (add_ln34_1_reg_851.read() ^ add_ln34_reg_841.read());
}

void xtea::thread_xor_ln34_fu_346_p2() {
    xor_ln34_fu_346_p2 = (shl_ln34_fu_326_p2.read() ^ zext_ln34_fu_342_p1.read());
}

void xtea::thread_xor_ln38_fu_420_p2() {
    xor_ln38_fu_420_p2 = (icmp_ln38_fu_402_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln46_1_fu_510_p2() {
    xor_ln46_1_fu_510_p2 = (add_ln46_1_fu_505_p2.read() ^ add_ln46_fu_494_p2.read());
}

void xtea::thread_xor_ln46_fu_488_p2() {
    xor_ln46_fu_488_p2 = (shl_ln46_fu_468_p2.read() ^ zext_ln46_fu_484_p1.read());
}

void xtea::thread_xor_ln56_fu_570_p2() {
    xor_ln56_fu_570_p2 = (icmp_ln56_fu_552_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln64_1_fu_722_p2() {
    xor_ln64_1_fu_722_p2 = (add_ln64_1_reg_894.read() ^ add_ln64_reg_884.read());
}

void xtea::thread_xor_ln64_fu_628_p2() {
    xor_ln64_fu_628_p2 = (shl_ln64_fu_608_p2.read() ^ zext_ln64_fu_624_p1.read());
}

void xtea::thread_xor_ln68_fu_684_p2() {
    xor_ln68_fu_684_p2 = (icmp_ln68_fu_666_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln76_1_fu_774_p2() {
    xor_ln76_1_fu_774_p2 = (add_ln76_1_fu_769_p2.read() ^ add_ln76_fu_758_p2.read());
}

void xtea::thread_xor_ln76_fu_752_p2() {
    xor_ln76_fu_752_p2 = (shl_ln76_fu_732_p2.read() ^ zext_ln76_fu_748_p1.read());
}

void xtea::thread_zext_ln34_fu_342_p1() {
    zext_ln34_fu_342_p1 = esl_zext<32,27>(lshr_ln2_fu_332_p4.read());
}

void xtea::thread_zext_ln46_fu_484_p1() {
    zext_ln46_fu_484_p1 = esl_zext<32,27>(lshr_ln3_fu_474_p4.read());
}

void xtea::thread_zext_ln64_fu_624_p1() {
    zext_ln64_fu_624_p1 = esl_zext<32,27>(lshr_ln_fu_614_p4.read());
}

void xtea::thread_zext_ln76_fu_748_p1() {
    zext_ln76_fu_748_p1 = esl_zext<32,27>(lshr_ln1_fu_738_p4.read());
}

void xtea::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(mode_read_read_fu_90_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_90_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_254_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln54_fu_522_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

void xtea::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"word0\" :  \"" << word0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"word1\" :  \"" << word1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key0\" :  \"" << key0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key1\" :  \"" << key1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key2\" :  \"" << key2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key3\" :  \"" << key3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mode\" :  \"" << mode.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result0\" :  \"" << result0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result0_ap_vld\" :  \"" << result0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result1\" :  \"" << result1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result1_ap_vld\" :  \"" << result1_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

